package com.mycompany.gra;

import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.util.Base64;
import java.util.function.Supplier;

public class Gra {
    public static void main(String[] args) throws Exception {
        final JFrame okno = new JFrame();
        okno.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        okno.setSize(1920, 1030);
        okno.setLocationRelativeTo(null);
        okno.setResizable(false);
        okno.setVisible(true);

        final Rectangle ekran = okno.getContentPane().getBounds();

        final Object[][] poziomy = new Object[8][3];

        final Robot robot = new Robot();

        poziomy[0] = new Object[] { 485,837 , ImageIO.read(new ByteArrayInputStream(Base64.getDecoder().decode("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"))) };
        poziomy[1] = new Object[] { 715, 461, ImageIO.read(new ByteArrayInputStream(Base64.getDecoder().decode("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"))) };
        poziomy[2] = new Object[] { 416, 364, ImageIO.read(new ByteArrayInputStream(Base64.getDecoder().decode("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"))) };
        poziomy[3] = new Object[] { 794, 950, ImageIO.read(new ByteArrayInputStream(Base64.getDecoder().decode("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"))) };
        poziomy[4] = new Object[] { 938, 949, ImageIO.read(new ByteArrayInputStream(Base64.getDecoder().decode("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"))) };
        poziomy[5] = new Object[] { 960, 515, ImageIO.read(new ByteArrayInputStream(Base64.getDecoder().decode("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"))) };
        poziomy[6] = new Object[] { 266, 257, ImageIO.read(new ByteArrayInputStream(Base64.getDecoder().decode("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"))) };
        poziomy[7] = new Object[] { 67, 923, ImageIO.read(new ByteArrayInputStream(Base64.getDecoder().decode(""))) };

        okno.getContentPane().setCursor(Toolkit.getDefaultToolkit().createCustomCursor(new BufferedImage(16, 16, BufferedImage.TYPE_INT_ARGB), new Point(0,0), ""));

        final Graphics2D grafika = (Graphics2D) okno.getContentPane().getGraphics();

        final Object[] zmienne_mt = { 0, false };

        final Supplier<Thread> stworzWatekGry = () -> new Thread(() -> {
            final BufferedImage gra = new BufferedImage(ekran.width, ekran.height, BufferedImage.TYPE_INT_ARGB);

            robot.mouseMove(okno.getX() + (Integer) poziomy[(int) zmienne_mt[0]][0], okno.getY() + (Integer) poziomy[(int) zmienne_mt[0]][1]);

            while (true) {
                try {Thread.sleep(5);} catch (Exception exception) {}

                gra.getGraphics().drawImage((Image) poziomy[(int) zmienne_mt[0]][2], 0, 0, ekran.width, ekran.height, null);

                var kursor = okno.getContentPane().getMousePosition();

                if (kursor == null) {
                    grafika.drawImage(gra, 0, 0, null);
                    continue;
                }

                var kostka = new Rectangle((int)kursor.getX() - 6,  (int)kursor.getY() + 6, 12, 12);

                for (int i = 0; i < kostka.width; i++)
                    for (int j = 0; j < kostka.height; j++) {
                        var kolor = gra.getRGB(kostka.x + i, kostka.y + j);

                        if (kolor == -16777216) {
                            try {
                                grafika.drawImage(ImageIO.read(new ByteArrayInputStream(Base64.getDecoder().decode(""))), 0, 0, ekran.width, ekran.height, null);
                                Thread.sleep(7000);
                            } catch (Exception e) {}
                            System.exit(1);
                        }
                        if (kolor == -58083) return;
                    }

                grafika.setColor(Color.CYAN);
                grafika.fillRect(kostka.x, kostka.y, kostka.width, kostka.height);

                grafika.drawImage(gra, 0, 0, null);
            }
        });

        final Thread watekMenu = new Thread(() -> {

            String[] opcje = new String[]{"Start (enter)", "Poziom: X (lewo i prawo)"};
            final int[] zmienne = new int[] {0, 1, 0};
            okno.addKeyListener(new KeyAdapter() {
                @Override
                public void keyPressed(KeyEvent e) {
                    if (e.getKeyCode() == KeyEvent.VK_UP) zmienne[0] = zmienne[0] == 0? 0 : zmienne[0] - 1;
                    else if (e.getKeyCode() == KeyEvent.VK_DOWN) zmienne[0] = zmienne[0] == opcje.length - 1? zmienne[0] : zmienne[0] + 1;
                    else if (zmienne[0] == 1 && e.getKeyCode() == KeyEvent.VK_LEFT) zmienne_mt[0] = (int)zmienne_mt[0] == 0? 0 : (int)zmienne_mt[0] - 1;
                    else if (zmienne[0] == 1 && e.getKeyCode() == KeyEvent.VK_RIGHT) zmienne_mt[0] = (int)zmienne_mt[0] == poziomy.length -1? zmienne_mt[0] : (int)zmienne_mt[0] + 1;
                    else if (zmienne[0] == 0 && e.getKeyCode() == KeyEvent.VK_ENTER) zmienne[2] = 1;
                    zmienne[1] = 1;
                }
            });

            while (true) {
                try {Thread.sleep(50);} catch (Exception e) {}
                if (zmienne[2] == 1) return;
                else if (zmienne[1] == 0) continue;
                zmienne[1] = 0;
                grafika.setColor(Color.black);
                grafika.fillRect(0, 0, ekran.width, ekran.height);
                grafika.drawImage((Image) poziomy[(int) zmienne_mt[0]][2], 100, 100, ekran.width - 200, ekran.height - 200, null);
                grafika.setFont(grafika.getFont().deriveFont(23f));
                for (int i = 0; i < opcje.length; i++){
                    grafika.setColor(zmienne[0] == i? Color.orange : Color.white);
                    grafika.drawString(opcje[i].replaceAll("X", String.valueOf((((int)zmienne_mt[0]) + 1))), 100, grafika.getFontMetrics().getHeight() * (i + 1));
                }
            }
        });

        watekMenu.start();
        while (watekMenu.isAlive()) {}

        while (true) {
            var watekGry = stworzWatekGry.get();
            watekGry.start();

            while (watekGry.isAlive()) {}

            var poziom = ((int) zmienne_mt[0]);

            if (poziom == (poziomy.length - 1)) break;

            zmienne_mt[0] = ((int) zmienne_mt[0]) + 1;
        }
    }
}